{
	"info": {
		"_postman_id": "e4365728-e6c5-4ce4-b3d9-55777ab3b013",
		"name": "Restful Booker API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29456388"
	},
	"item": [
		{
			"name": "HealthCheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code Ã© 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"A resposta deve conter Created\", function () {\r",
							"    pm.response.to.have.body(\"Created\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/ping",
					"host": [
						"{{host}}"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBookingIds (all ids)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Each item in the response has a bookingid\", function () {\r",
							"    let response = pm.response.json();\r",
							"    response.forEach(item => {\r",
							"        pm.expect(item).to.have.property('bookingid');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/booking",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBooking (by id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Booking details retrieved successfully\", function () {\r",
							"    var jsonResponse = pm.response.json();\r",
							"    pm.expect(jsonResponse).to.be.an('object');\r",
							"    pm.expect(jsonResponse).to.have.property('firstname');\r",
							"    pm.expect(jsonResponse).to.have.property('lastname');\r",
							"    pm.expect(jsonResponse).to.have.property('totalprice');\r",
							"    pm.expect(jsonResponse).to.have.property('depositpaid');\r",
							"    pm.expect(jsonResponse).to.have.property('bookingdates');\r",
							"    pm.expect(jsonResponse.bookingdates).to.have.property('checkin');\r",
							"    pm.expect(jsonResponse.bookingdates).to.have.property('checkout');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/1",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBookingIds (by name)",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/booking?firstname=Susan&lastname=Jackson",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "firstname",
							"value": "Susan"
						},
						{
							"key": "lastname",
							"value": "Jackson"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBookingIds (by checkin)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/booking?checkin=2022-01-01",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "checkin",
							"value": "2022-01-01"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBookingIds (by checkout)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/booking?checkout=2022-01-01",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "checkout",
							"value": "2022-01-01"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateToken",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/auth",
					"host": [
						"{{host}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Booking created successfully\", function () {\r",
							"    var jsonResponse = pm.response.json();\r",
							"    pm.expect(jsonResponse).to.be.an('object');\r",
							"    pm.expect(jsonResponse).to.have.property('bookingid');\r",
							"    pm.expect(jsonResponse.booking).to.have.property('firstname', 'John');\r",
							"    pm.expect(jsonResponse.booking).to.have.property('lastname', 'Marston');\r",
							"    pm.expect(jsonResponse.booking).to.have.property('totalprice', 111);\r",
							"    pm.expect(jsonResponse.booking).to.have.property('depositpaid', true);\r",
							"    pm.expect(jsonResponse.booking.bookingdates).to.have.property('checkin', '2018-01-01');\r",
							"    pm.expect(jsonResponse.booking.bookingdates).to.have.property('checkout', '2019-01-01');\r",
							"    pm.expect(jsonResponse.booking).to.have.property('additionalneeds', 'Breakfast');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"John\",\r\n    \"lastname\": \"Marston\",\r\n    \"totalprice\": 111,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-01-01\",\r\n        \"checkout\": \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/booking",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Booking updated successfully\", function () {\r",
							"    var jsonResponse = pm.response.json();\r",
							"    pm.expect(jsonResponse).to.be.an('object');\r",
							"    pm.expect(jsonResponse).to.have.property('firstname', 'John');\r",
							"    pm.expect(jsonResponse).to.have.property('lastname', 'Marston');\r",
							"    pm.expect(jsonResponse).to.have.property('totalprice', 150);\r",
							"    pm.expect(jsonResponse).to.have.property('depositpaid', true);\r",
							"    pm.expect(jsonResponse.bookingdates).to.have.property('checkin', '2018-01-01');\r",
							"    pm.expect(jsonResponse.bookingdates).to.have.property('checkout', '2018-01-10');\r",
							"    pm.expect(jsonResponse).to.have.property('additionalneeds', 'Breakfast');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{vault:password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"John\",\r\n    \"lastname\": \"Marston\",\r\n    \"totalprice\": 150,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-01-01\",\r\n        \"checkout\": \"2018-01-10\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/booking/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PartialUpdateBooking",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{vault:password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Arthur\",\r\n    \"lastname\" : \"Morgan\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/booking/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code Ã© 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{vault:password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/booking/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": []
		}
	]
}